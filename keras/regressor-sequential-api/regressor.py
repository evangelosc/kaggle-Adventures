# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UBqGeS0vl4Mcywk5jwyxGWOE0u6w_Qsy
"""

# Regression MLP Using the Sequential API
# For this notebooks we used the California housing problem and tackle it using a regression neural network.

# Import our Set up
from sklearn.datasets import fetch_california_housing
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

import tensorflow as tf
from tensorflow import keras

# Data preprocessing
housing = fetch_california_housing()
X_train_full, X_test, y_train_full, y_test = train_test_split(housing.data, housing.target)
X_train, X_valid, y_train, y_valid = train_test_split(X_train_full, y_train_full)

scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_valid = scaler.transform(X_valid)
X_test = scaler.transform(X_test)

# Model
model = keras.models.Sequential([
  keras.layers.Dense(50, activation="relu", input_shape=X_train.shape[1:]),
  keras.layers.Dense(1)
])

# Compiling and Evaluating the Model
optimizer = keras.optimizers.SGD(learning_rate=0.03, nesterov=False, name='SGD')
model.compile(loss="mean_squared_error", optimizer=optimizer)
history = model.fit(X_train, y_train, epochs=30, validation_data=(X_valid, y_valid))
mse_test = model.evaluate(X_test, y_test)

# Pretend these are new instances
X_new = X_test[:3]
y_pred = model.predict(X_new)

print(y_pred)

